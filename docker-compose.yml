version: '3'

services:
  postgres:
    image: postgres
    tty: true
    stdin_open: true
    environment:
      POSTGRES_PASSWORD: "docker_hp@321"
      POSTGRES_DB: "hello_print"
      POSTGRES_USER: "postgres"
    ports:
      - "15432:5432"
    volumes:
      - ./database/data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - database
      - kafka

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "geovannylc@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "@geo@geovanny@"
    ports:
      - "16543:80"
    depends_on:
      - postgres
    networks:
      - database

  kafka:
    image: confluentinc/cp-kafka
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
    ports:
      - "9092:9092"
    depends_on:
      - postgres
    networks:
      - database
      - kafka

  zookeeper:
    image: confluentinc/cp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"
      ZOOKEEPER_TICK_TIME: 50
    depends_on:
      - kafka
    networks:
      - kafka

  requester:
    build: .
    command: >
      bash -c "composer install
      && php requester.php"
    image: phpdockerio/php74-cli:latest
    environment:
      XDEBUG_CONFIG: "remote_host=host.docker.internal"
      PHP_IDE_CONFIG: "serverName=xdebug-docker"
    tty: true
    stdin_open: true
    working_dir: "/var/www/hello-print"
    ports:
    - "9000:9000"
    depends_on:
      - kafka
      - postgres
    env_file:
      - .env
    volumes:
      - ./:/var/www/hello-print
    networks:
      - database
      - kafka

  service_a:
    command: >
      bash -c "composer install && php serviceA.php"
    image: phpdockerio/php74-cli:latest
    tty: true
    working_dir: "/var/www/hello-print"
    stdin_open: true
    depends_on:
      - kafka
      - requester
    env_file:
      - .env
    volumes:
      - ./:/var/www/hello-print
    networks:
      - database
      - kafka

  service_b:
    command: >
      bash -c "composer install
      && php serviceB.php"
    image: phpdockerio/php74-cli:latest
    tty: true
    working_dir: "/var/www/hello-print"
    stdin_open: true
    depends_on:
      - requester
      - kafka
    env_file:
      - .env
    volumes:
      - ./:/var/www/hello-print
    networks:
      - database
      - kafka

networks:
  kafka:
    driver: bridge
  database:
    driver: bridge